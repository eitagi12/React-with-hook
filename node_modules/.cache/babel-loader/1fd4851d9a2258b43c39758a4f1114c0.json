{"ast":null,"code":"var _jsxFileName = \"/Users/supasitloha/Learning/Code for study/hooks-01-starting-project/src/components/Ingredients/IngredientForm.js\";\nimport React, { useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport \"./IngredientForm.css\";\nconst IngredientForm = React.memo(props => {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onAddIngredient({\n      title: enteredTitle,\n      amount: enteredAmount\n    }); // ...\n  };\n\n  return React.createElement(\"section\", {\n    className: \"ingredient-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"title\",\n    value: enteredTitle,\n    onChange: event => {\n      setEnteredTitle(event.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"amount\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Amount\"), React.createElement(\"input\", {\n    type: \"number\",\n    id: \"amount\",\n    value: enteredAmount,\n    onChange: event => {\n      setEnteredAmount(event.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"ingredient-form__actions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Add Ingredient\")))));\n});\nexport default IngredientForm;","map":{"version":3,"sources":["/Users/supasitloha/Learning/Code for study/hooks-01-starting-project/src/components/Ingredients/IngredientForm.js"],"names":["React","useState","Card","IngredientForm","memo","props","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","submitHandler","event","preventDefault","onAddIngredient","title","amount","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,sBAAP;AAEA,MAAMC,cAAc,GAAGH,KAAK,CAACI,IAAN,CAAWC,KAAK,IAAI;AACzC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,EAAD,CAAlD;;AAEA,QAAMS,aAAa,GAAGC,KAAK,IAAI;AAC7BA,IAAAA,KAAK,CAACC,cAAN;AACAP,IAAAA,KAAK,CAACQ,eAAN,CAAsB;AACpBC,MAAAA,KAAK,EAAER,YADa;AAEpBS,MAAAA,MAAM,EAAEP;AAFY,KAAtB,EAF6B,CAM7B;AACD,GAPD;;AASA,SACE;AAAS,IAAA,SAAS,EAAC,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAEE,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,EAAE,EAAC,OAFL;AAGE,IAAA,KAAK,EAAEJ,YAHT;AAIE,IAAA,QAAQ,EAAEK,KAAK,IAAI;AACjBJ,MAAAA,eAAe,CAACI,KAAK,CAACK,MAAN,CAAaC,KAAd,CAAf;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAYE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,EAAE,EAAC,QAFL;AAGE,IAAA,KAAK,EAAET,aAHT;AAIE,IAAA,QAAQ,EAAEG,KAAK,IAAI;AACjBF,MAAAA,gBAAgB,CAACE,KAAK,CAACK,MAAN,CAAaC,KAAd,CAAhB;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAZF,EAuBE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CAvBF,CADF,CADF,CADF;AAiCD,CA9CsB,CAAvB;AAgDA,eAAed,cAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport Card from \"../UI/Card\";\nimport \"./IngredientForm.css\";\n\nconst IngredientForm = React.memo(props => {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onAddIngredient({\n      title: enteredTitle,\n      amount: enteredAmount\n    });\n    // ...\n  };\n\n  return (\n    <section className=\"ingredient-form\">\n      <Card>\n        <form onSubmit={submitHandler}>\n          <div className=\"form-control\">\n            <label htmlFor=\"title\">Name</label>\n            <input\n              type=\"text\"\n              id=\"title\"\n              value={enteredTitle}\n              onChange={event => {\n                setEnteredTitle(event.target.value);\n              }}\n            />\n          </div>\n          <div className=\"form-control\">\n            <label htmlFor=\"amount\">Amount</label>\n            <input\n              type=\"number\"\n              id=\"amount\"\n              value={enteredAmount}\n              onChange={event => {\n                setEnteredAmount(event.target.value);\n              }}\n            />\n          </div>\n          <div className=\"ingredient-form__actions\">\n            <button type=\"submit\">Add Ingredient</button>\n          </div>\n        </form>\n      </Card>\n    </section>\n  );\n});\n\nexport default IngredientForm;\n"]},"metadata":{},"sourceType":"module"}